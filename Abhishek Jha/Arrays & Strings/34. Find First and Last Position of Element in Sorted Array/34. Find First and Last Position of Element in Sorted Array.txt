class Solution {

    public int search(int[] nums, int target, boolean firstStartIndex) {
        int ans = -1;
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] < target) 
                start = mid + 1; 
            else if (nums[mid] > target) 
                end = mid - 1; 
            else {
// idhar esliye ans = mid kiya kyun ki kya pta first index hi mid ho, agar milta hai toh return krdeyenge
                ans = mid;
                if (firstStartIndex) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }
        }
        return ans;
    }

    public int[] searchRange(int[] nums, int target) {
        int[] ans = { -1, -1 };
        ans[0] = search(nums, target, true); //log n
        if (ans[0] != -1) {
            ans[1] = search(nums, target, false); //log n
        }
        return ans; // log n + log n = 2(log n) = log n
    }
}
